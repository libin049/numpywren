language: python
sudo: required
dist: trusty
python:
- '3.6'
install:
- wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
- export RANDOM_ID=`python -c "from random import choice; print(''.join([choice('1234567890')
  for i in range(6)]))"`;
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- printenv TRAVIS_PULL_REQUEST
- printenv TRAVIS_PULL_REQUEST_BRANCH
- printenv TRAVIS_COMMIT
- printenv TRAVIS_BRANCH
- printenv
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
- conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy pytest cython
  nose boto3 PyYAML Click pytest numba scipy
- source activate test-environment
- pip install glob2 pylint tornado awscli sklearn cloudpickle pywren

before_script:
- export EPOCH_STAMP=`date +%s`
- export BUILD_GUID=`echo $TRAVIS_JOB_NUMBER | sed 's/\./_/g'`_${EPOCH_STAMP}_${RANDOM_ID}
- echo CLEAN BUILD ID IS $BUILD_GUID
- export BUCKET_NAME=`echo numpywren_travis_$BUILD_GUID | sed 's/_/-/g'`
- echo $BUCKET_NAME
- pywren test_config
- pywren get_aws_account_id

script:
- pywren create_config --lambda_role=pywren_exec_role --function_name=pywren_travis_$BUILD_GUID --bucket_name=$BUCKET_NAME --sqs_queue=pywren_travis_$BUILD_GUID --standalone_name=pywren_travis_$BUILD_GUID
- pywren create_bucket
- pywren create_instance_profile
- pywren create_queue
- sleep 10
- pywren deploy_lambda
- pytest -v --fulltrace tests/

after_script:
- pywren delete_queue
- pywren delete_lambda
- pywren delete_instance_profile
- pywren delete_role
- pywren delete_bucket
- pywren standalone terminate_instances

after_failure:
- pywren delete_queue
- pywren delete_lambda
- pywren delete_instance_profile
- pywren delete_role
- pywren delete_bucket
- pywren standalone terminate_instances

env:
  global:
  - secure: mAE3/N7JNzrm+ydQd6RXUADdLqwxxCSiCGsEoUUEuyJSFWoMQc30BGsx3GRB3Tbr/ieMr49pAct3dkJNMHwY2g9CD9enJHb//UaNiMMAJhWZvdAD95MhupbyMfA+p35J6dVyPm4BfuKNqSg3u1JA4xxfQg2oUH2L6PHCe63HEoa0hOe34CWcW6Gc7Cj7mxGwFHrP2Nv9JjpJyF7pZQAktbx5Vkplzh5iXrRcZsz/B6/pq3hif5VaFaF+uaMNe8YL7u5NT0s2wKTXGqZXPPCvaSP3apNN6vcqWJ3Lih9pxnyRfrITO7D/oXAe5TbP0jKXBG5I7gW2UIQrh3zweA1hCeYqY+Lpq+aIEqipn79pkQDo1101bwSuC/1onCFIqndUuYtz58wipe2ZPHJqEgGI5ENxBKEq8zk1sUqkIBC3jKA/o0Q2czwzRuUmQAV2tEhP6adVA/MoPiFHjKPrCRUCSXTvfJCjiIEzau8WbSXBis4r2TYOeh60tciPo8NUPdPPxMxyZj+DaX6ULMfb6G5SHp9pkek2IVWoqVE3r8Dn9mKtVJxEMDCY6FmF3wRRHMqDnrnMsBn2DGMxUXYKI4wmrVUgYe1R6Fsytein1/oL56aChxyZ4iztsq915bQGvHHKaAwhFiTJ0lz3nPdnUpU7oIRrq2PZpOvKB+j4YIx9Ph0=
  - secure: pt3t58bJJlklnTWTrfslFSn0QzRDjZppMmUdEgFOP6WfUnHoVWxQI8pEyDn8yOLq5JmJQkt/EmGq9PC1sgNHTQNG4bHckqByT5oabyXJm1O33X/mvNDjzL/HUPa55UVEybCWke9ltjIf77h164USjrEC9Thho/12qSrkIo/o/0Av8WfIOaCN0B8PfLJs7RdbOkEE3lmHSDJEU2JKVfu+RTTBlY5yFjrGfXWWvq5YYMQveTFbLz79YpFlkRnXPrTdeE8iUiIaU/KqVj8F/Lnu308U7jw2zONPzh26AG0mB5D+HbXJj3RzJX1oWuFoUnenQlc3y5QEeaOGkNcfcWSUttHwTm+X1lJka95kztB04mf/WZ1K9NVjlSAx2rGAcT7UvUvLyClYfnkGV6OG5bdJzjGe6yP4vXJxsXPwzhYuD9dEVi37lBlFKtjLlWZbGglLoLjYHW6GPjwumb64h+lIuUfWU0Icn8wBX2yWsAJfKWcDyhmBhTXRY3ffd7gL9ffPO0NAcYuWHB7KnwhN1l3cJDVeZIHwuxaXrrQomtg5YghnaBxRk6WsUXBxWg37Bn56neGisy+BV8W7gRZlb5L9MEuQVtoZ3UORfKrVKj0pA4XJkXUoaeEpFZBIoVQUOze+sa88nc/tIduLHo8wKUrwcWfT0lmhgbrOOzof82HGPO8=
